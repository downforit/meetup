/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import images.GenericImage;
import images.GenericImageFactory;
import images.text.TextUtil;
import java.awt.Color;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import utils.BufferedImageUtils;
import utils.FileUtilities;
import utils.SystemUtils;

/**
 *
 * @author Mario
 */
public class ImagingTestFrame extends javax.swing.JFrame {
    File filePath = new File(".");
    File maskPath = new File(".");
    
    private boolean disableControlsEvents = false;
    
    List<ImageWrapper> imageList = new ArrayList<ImageWrapper>();
    
    /**
     * Creates new form MainTestFrame
     */
    public ImagingTestFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnAddFile = new javax.swing.JButton();
        btnResetImages = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmbLayers = new javax.swing.JComboBox();
        brnSave = new javax.swing.JButton();
        btnDelImage = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        spinOpacity = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spinSizePercentage = new javax.swing.JSpinner();
        chkUseJai = new javax.swing.JCheckBox();
        chkSaveHQ = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        BtnDown = new javax.swing.JButton();
        BtnLeft = new javax.swing.JButton();
        BtnRight = new javax.swing.JButton();
        btnUp = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        spinMovingStep = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        btnAddTransMask = new javax.swing.JButton();
        btnBeW = new javax.swing.JButton();
        btnAddText = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        imageViewer1 = new test.ImageViewer();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(0, 140));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAddFile.setText("Add Image");
        btnAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFileActionPerformed(evt);
            }
        });

        btnResetImages.setText("Reset");
        btnResetImages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetImagesActionPerformed(evt);
            }
        });

        jLabel3.setText("select a layer");

        cmbLayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLayersActionPerformed(evt);
            }
        });

        brnSave.setText("save");
        brnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnSaveActionPerformed(evt);
            }
        });

        btnDelImage.setText("DEL");
        btnDelImage.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnDelImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(cmbLayers, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelImage))
            .addComponent(btnAddFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnResetImages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnAddFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnResetImages)
                    .addComponent(brnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbLayers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelImage)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        spinOpacity.setModel(new javax.swing.SpinnerNumberModel(255, 0, 255, 5));
        spinOpacity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinOpacityStateChanged(evt);
            }
        });

        jLabel1.setText("Opacity");

        jLabel2.setText("resize %");

        spinSizePercentage.setModel(new javax.swing.SpinnerNumberModel(100, 1, 200, 1));
        spinSizePercentage.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinSizePercentageStateChanged(evt);
            }
        });

        chkUseJai.setText("use JAI");

        chkSaveHQ.setText("Save Hight Qual.");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinOpacity)
                    .addComponent(spinSizePercentage)))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkUseJai)
                    .addComponent(chkSaveHQ)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spinOpacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spinSizePercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkSaveHQ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkUseJai))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BtnDown.setText("DOWN");
        BtnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDownActionPerformed(evt);
            }
        });

        BtnLeft.setText("LEFT");
        BtnLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLeftActionPerformed(evt);
            }
        });

        BtnRight.setText("RIGHT");
        BtnRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRightActionPerformed(evt);
            }
        });

        btnUp.setText("UP");
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        jLabel4.setText("step");

        spinMovingStep.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(1), null, Integer.valueOf(1)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtnDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(BtnLeft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnRight))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinMovingStep, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(btnUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnRight)
                    .addComponent(BtnLeft))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnDown)
                .addGap(4, 4, 4)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spinMovingStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAddTransMask.setText("Transp MASK");
        btnAddTransMask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTransMaskActionPerformed(evt);
            }
        });

        btnBeW.setText("Black & White");
        btnBeW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeWActionPerformed(evt);
            }
        });

        btnAddText.setText("Add Text");
        btnAddText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddTransMask)
                    .addComponent(btnBeW)
                    .addComponent(btnAddText))
                .addGap(0, 37, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnAddTransMask)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBeW)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddText)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));
        jPanel2.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout imageViewer1Layout = new javax.swing.GroupLayout(imageViewer1);
        imageViewer1.setLayout(imageViewer1Layout);
        imageViewer1Layout.setHorizontalGroup(
            imageViewer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 584, Short.MAX_VALUE)
        );
        imageViewer1Layout.setVerticalGroup(
            imageViewer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );

        jPanel2.add(imageViewer1, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFileActionPerformed

        if(this.imageList.size() == 0){
            if(this.chkUseJai.isSelected()){
                GenericImageFactory.getInstance().setFlgUseJai(true);
            } else {
                GenericImageFactory.getInstance().setFlgUseJai(false);
            }
        }
        
        //this.imageViewer1.setVisible(false);
        
        if(this.filePath == null){
            this.filePath = new File(".");
        }
        filePath = FileUtilities.showJpgTifPngChooser(this.filePath.getAbsolutePath(), this);

        if(filePath == null){
            return;
        }
        
        ImageWrapper imageWrapper = new ImageWrapper();
        imageWrapper.srcImage = GenericImageFactory.getInstance().readImage(filePath.getAbsolutePath());
        
        addImageToList(imageWrapper, filePath);
        
    }//GEN-LAST:event_btnAddFileActionPerformed

    private void btnResetImagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetImagesActionPerformed
        
        //for(int i = this.cmbLayers.getItemCount(); i > 0; i--){
        //    this.cmbLayers.setSelectedItem(null);
        //    this.cmbLayers.removeAll(i-1);
        //}

        this.chkUseJai.setEnabled(true);
        
        this.cmbLayers.removeAll();
        this.cmbLayers.removeAllItems();
        
        this.imageList.clear();
        this.imageViewer1.setImageToPaint(null);
        
        
    }//GEN-LAST:event_btnResetImagesActionPerformed

    private void spinOpacityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinOpacityStateChanged
        
        if(this.imageList.size() <= 0 || this.disableControlsEvents){
            return;
        }
        
        this.imageList.get(this.cmbLayers.getSelectedIndex()).status.opacity = (Integer)this.spinOpacity.getValue();

        this.showImages();        
        
    }//GEN-LAST:event_spinOpacityStateChanged

    private void spinSizePercentageStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinSizePercentageStateChanged

        if(this.imageList.size() <= 1 || this.cmbLayers.getSelectedIndex() == 0 || this.disableControlsEvents){
            return;
        }
        
        this.imageList.get(this.cmbLayers.getSelectedIndex()).status.sizePercentage = (Integer)this.spinSizePercentage.getValue();

        this.showImages();        
        
    }//GEN-LAST:event_spinSizePercentageStateChanged

    private void BtnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDownActionPerformed

        moveImage('S');
        
    }//GEN-LAST:event_BtnDownActionPerformed

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        
        moveImage('N');
        
    }//GEN-LAST:event_btnUpActionPerformed

    private void BtnLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLeftActionPerformed

        moveImage('W');
        
    }//GEN-LAST:event_BtnLeftActionPerformed

    private void BtnRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRightActionPerformed

        moveImage('E');
        
    }//GEN-LAST:event_BtnRightActionPerformed

    private void cmbLayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLayersActionPerformed
        if(this.cmbLayers.getItemCount() <= 0){
            return;
        }
        
        ImageWrapper currentImage = this.imageList.get(this.cmbLayers.getSelectedIndex());
        
        try{
            this.disableControlsEvents = true;
            this.spinOpacity.setValue(currentImage.status.opacity);
            this.spinSizePercentage.setValue(currentImage.status.sizePercentage);
        } finally{
            this.disableControlsEvents = false;
        }
        
    }//GEN-LAST:event_cmbLayersActionPerformed

    private void brnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnSaveActionPerformed
        
        File dirPath = FileUtilities.showDirChooser("Choose directory where save the demo.jpg and demo.png",".", this);

        
        Object oldRenderParam = BufferedImageUtils.getRenderParamenter();
        
        try{
            if(this.chkSaveHQ.isSelected()){
                BufferedImageUtils.setMaxQuality();
            }
                    
            GenericImage imgToSave = buildImageToShow();

            if(imgToSave != null){
                GenericImage imgToSaveNoAlpha = imgToSave.removeTransparency(Color.WHITE);

                imgToSave.saveAsWithoutIcc(dirPath.getAbsolutePath() + "/" + "demo.png");
                imgToSaveNoAlpha.saveAsWithoutIcc(dirPath.getAbsolutePath() + "/" + "demo.jpg", 0.95f);

                GenericImage imgToSave2 = imgToSave.scale(2);
                GenericImage imgToSaveNoAlpha2 = imgToSaveNoAlpha.scale(2);

                imgToSave2.saveAsWithoutIcc(dirPath.getAbsolutePath() + "/" + "demo_double.png");
                imgToSaveNoAlpha2.saveAsWithoutIcc(dirPath.getAbsolutePath() + "/" + "demo_double.jpg", 0.95f);


                GenericImage imgToSave3 = imgToSave.scale(0.1f);
                GenericImage imgToSaveNoAlpha3 = imgToSaveNoAlpha.scale(0.1f);

                imgToSave3.saveAsWithoutIcc(dirPath.getAbsolutePath() + "/" + "demo_reduced.png");
                imgToSaveNoAlpha3.saveAsWithoutIcc(dirPath.getAbsolutePath() + "/" + "demo_reduced.jpg", 0.95f);
            }
            imgToSave = null;
        } finally{
            BufferedImageUtils.setRenderParamenter(oldRenderParam);
        }

        SystemUtils.freeMemory();
        
    }//GEN-LAST:event_brnSaveActionPerformed

    private void btnAddTransMaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTransMaskActionPerformed

        if(this.maskPath == null){
            this.maskPath = new File(".");
        }
        maskPath = FileUtilities.showJpgTifPngChooser(this.maskPath.getAbsolutePath(), this);

        if(maskPath == null){
            return;
        }

        GenericImage imageTranspMask = GenericImageFactory.getInstance().readImage(maskPath.getAbsolutePath());
        
        ImageWrapper currentImage = this.imageList.get(this.cmbLayers.getSelectedIndex());
        currentImage.lastStatus = null;
        
        imageTranspMask = imageTranspMask.grayScaleSingleLayer();
        imageTranspMask = imageTranspMask.resizeImageStretched(currentImage.srcImage.getWidth(), currentImage.srcImage.getHeight());
        currentImage.srcImage = currentImage.srcImage.addTrasparencyMask(imageTranspMask);

        this.showImages();
        
    }//GEN-LAST:event_btnAddTransMaskActionPerformed

    private void btnDelImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelImageActionPerformed
        
        int indexToRemove = this.cmbLayers.getSelectedIndex();
        this.cmbLayers.remove(indexToRemove);
        this.cmbLayers.removeItemAt(indexToRemove);

        this.imageList.remove(indexToRemove);
        
        this.showImages();
        
    }//GEN-LAST:event_btnDelImageActionPerformed

    private void btnBeWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeWActionPerformed

        ImageWrapper currentImage = this.imageList.get(this.cmbLayers.getSelectedIndex());
        currentImage.lastStatus = null;
        
        currentImage.srcImage = currentImage.srcImage.grayScale();
       
        this.showImages();
        
    }//GEN-LAST:event_btnBeWActionPerformed

    private void btnAddTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTextActionPerformed
        
        ImageWrapper imageBackground = this.imageList.get(this.cmbLayers.getSelectedIndex());
        
        //GenericImageFactory.getInstance().
        //GenericImage imgToAdd = GenericImageFactory.getInstance().buildGenericImage(TextUtil.buildBufferedImage("demo Text", "Arial", 30, Color.green, TextUtil.ALIGN_LEFT, imageBackground.srcImage.getWidth(), imageBackground.srcImage.getHeight(), 1));
        GenericImage imgToAdd = GenericImageFactory.getInstance().buildGenericImage(TextUtil.buildBufferedImage("demo Text", "Arial", 100, Color.green, TextUtil.ALIGN_LEFT, imageBackground.srcImage.getWidth(), imageBackground.srcImage.getHeight(), 1));
        
        ImageWrapper imageWrapper = new ImageWrapper();
        imageWrapper.srcImage = imgToAdd;
        
        addImageToList(imageWrapper, new File("text"));
       
        this.showImages();
        
    }//GEN-LAST:event_btnAddTextActionPerformed

  

    private void moveImage(char direction){
        if(this.imageList.size() <= 0 || this.cmbLayers.getSelectedIndex() == 0){
            return;
        }
        
        
        ImageWrapper currentImage = this.imageList.get(this.cmbLayers.getSelectedIndex());
        
        switch(direction){
            case 's'://south
            case 'S':
                currentImage.status.position.y += (double)(Integer)this.spinMovingStep.getValue()/this.imageViewer1.getScaleFactor();
                break;
            case 'n'://north
            case 'N':
                currentImage.status.position.y -= (double)(Integer)this.spinMovingStep.getValue()/this.imageViewer1.getScaleFactor();
                break;
            case 'e'://east
            case 'E':
                currentImage.status.position.x += (double)(Integer)this.spinMovingStep.getValue()/this.imageViewer1.getScaleFactor();
                break;
            case 'w'://west
            case 'W':
                currentImage.status.position.x -= (double)(Integer)this.spinMovingStep.getValue()/this.imageViewer1.getScaleFactor();
                break;
        }
        
        this.showImages();
        
    }
    
    
    private void addImageToList(ImageWrapper imageWrapper, File filePath){
        String label;
        
        if(this.imageList.size() == 0){
            label = "background";
        } else {
            //label = String.valueOf(this.imageList.size());
            label = filePath.getName();
            imageWrapper.srcImage = imageWrapper.srcImage.scale(this.imageList.get(0).srcImage.getWidth(), this.imageList.get(0).srcImage.getHeight());
        }
        
        this.imageList.add(imageWrapper);
        
        this.cmbLayers.addItem(label);
        this.cmbLayers.setSelectedIndex(this.cmbLayers.getItemCount() - 1);
        
        this.showImages();
    }
    
    
    
    
    public void showImages(){
        
        
        
        if(this.imageList.size() == 0){
            this.chkUseJai.setEnabled(true);
            return;
        } else {
            this.chkUseJai.setEnabled(false);
        }
        
        this.imageViewer1.setImageToPaint(buildImageToShow());        
    }

    
    public GenericImage buildImageToShow(){
        if(this.imageList.size() == 0){
            return null;
        }

        GenericImage imgResult = this.imageList.get(0).getFinalImage(true);
        
        ImageWrapper currentImage;
        for(int i = 1; i < this.imageList.size(); i++){
            currentImage = this.imageList.get(i);
            imgResult.DrawImage(currentImage.getFinalImage(), currentImage.status.position.x, currentImage.status.position.y);
            
        }
        
        return imgResult;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImagingTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImagingTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImagingTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImagingTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImagingTestFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDown;
    private javax.swing.JButton BtnLeft;
    private javax.swing.JButton BtnRight;
    private javax.swing.JButton brnSave;
    private javax.swing.JButton btnAddFile;
    private javax.swing.JButton btnAddText;
    private javax.swing.JButton btnAddTransMask;
    private javax.swing.JButton btnBeW;
    private javax.swing.JButton btnDelImage;
    private javax.swing.JButton btnResetImages;
    private javax.swing.JButton btnUp;
    private javax.swing.JCheckBox chkSaveHQ;
    private javax.swing.JCheckBox chkUseJai;
    private javax.swing.JComboBox cmbLayers;
    private test.ImageViewer imageViewer1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSpinner spinMovingStep;
    private javax.swing.JSpinner spinOpacity;
    private javax.swing.JSpinner spinSizePercentage;
    // End of variables declaration//GEN-END:variables
}
